# x-logging: &logging
#   driver: "k8s-file"
#   # driver: "json-file"
#   options:
#     max-size: "10m"
#     max-file: "3"

# Хорошая статья по настройке redis compose: "Быстрый запуск Redis через Docker Compose" https://habr.com/ru/articles/823936/


services:
  redis:
    image: docker.io/redis:latest
#    image: docker.io/redis/redis-stack-server:latest
    container_name: redis
    restart: unless-stopped
    environment:
#  Пароль для Redis (имя пользователя по умолчанию - default)
      - REDIS_PASSWORD=${REDIS_PASSWORD}
#  Имя нового пользователя
      - REDIS_USER=${REDIS_USER}
#  Пароль для нового пользователя.
      - REDIS_USER_PASSWORD=${REDIS_USER_PASSWORD}
    ports:
      - "6379:6379"
#      - "6380:6379"
    volumes:
    # Хранение данных Redis в локальной директории ./redisdata. Таким образом, ваши данные будут сохраняться в 
    # локальной папке, и вы не потеряете их, даже если контейнер Redis случайно удалится или вы потеряете к нему доступ. 
    # Главное — обеспечить сохранность данных из папки redisdata.
    # Или использовать инструкцию volumes и тогда ваши данные будут сохраняться где-то в системе.
      - ./redisdata:/data # Optional: for data persistence
      # - redis_data:/data
    deploy:
    #  Ограничения и резервирование ресурсов:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
# mkdir -p /usr/local/etc/redis: Эта команда создает директорию /usr/local/etc/redis, если она не существует. Флаг -p позволяет создавать вложенные директории при необходимости.
# echo "bind 0.0.0.0" > /usr/local/etc/redis/redis.conf: Здесь мы добавляем строку "bind 0.0.0.0" в файл redis.conf. Это позволяет Redis прослушивать соединения со всех IP-адресов.
# echo "requirepass $REDIS_PASSWORD" >> /usr/local/etc/redis/redis.conf: Эта команда добавляет строку с паролем в файл redis.conf. Пароль берется из переменной окружения $REDIS_PASSWORD.
# echo "appendonly yes" >> /usr/local/etc/redis/redis.conf: Здесь мы включаем режим журнала (append-only mode) для сохранения данных на диск.
# echo "appendfsync everysec" >> /usr/local/etc/redis/redis.conf: Эта строка указывает Redis выполнять синхронизацию журнала с диском каждую секунду.
# echo "user default on nopass ~* +@all" > /usr/local/etc/redis/users.acl: Здесь мы создаем файл users.acl и добавляем правило доступа для пользователя по умолчанию. Он может подключаться без пароля и имеет доступ ко всем командам (~* +@all).
# echo "user $REDIS_USER on >$REDIS_USER_PASSWORD ~* +@all" >> /usr/local/etc/redis/users.acl: Эта команда добавляет правило доступа для конкретного пользователя (с именем, указанным в переменной $REDIS_USER). Пользователь должен предоставить пароль из переменной $REDIS_USER_PASSWORD.
# redis-server /usr/local/etc/redis/redis.conf --aclfile /usr/local/etc/redis/users.acl: Здесь мы запускаем Redis-сервер с указанным файлом конфигурации и файлом ACL.
# Это можно положить всё в конфиг и примонтировать.
## -1------------------------------------------------------------------------------------------
#  Приложение spring boot не подключилось, ошибка "NOPERM No permissions to access a channel":
#    При запуске приложения spring boot , оно не смогло сконнектиться с Редис. Нашел решение:
#    aws elasticache modify-user --region $REGION --user-id $USER_ID --access-string "on ~* -@all +@read +@write +cluster|nodes"
#    но оно не помогло. Нужно еще поискать в интернете.
#    Было так:
#    echo "user default on nopass ~* +@all" > /usr/local/etc/redis/users.acl &&
#    echo "user $REDIS_USER on >$REDIS_USER_PASSWORD ~* +@all" >> /usr/local/etc/redis/users.acl &&
#
## -2------------------------------------------------------------------------------------------
#  Приложение spring boot не подключилось, ошибка "NOPERM No permissions to access a channel":
#    mkdir -p /usr/local/etc/redis &&
    #        echo "bind 0.0.0.0" > /usr/local/etc/redis/redis.conf &&
    #        echo "requirepass $REDIS_PASSWORD" >> /usr/local/etc/redis/redis.conf &&
    #        echo "appendonly yes" >> /usr/local/etc/redis/redis.conf &&
    #        echo "appendfsync everysec" >> /usr/local/etc/redis/redis.conf &&
    #        echo "user default on nopass ~* +@all +@read +@write +cluster|nodes" > /usr/local/etc/redis/users.acl &&
    #        echo "user $REDIS_USER on >$REDIS_USER_PASSWORD ~* +@all +@read +@write +cluster|nodes" >> /usr/local/etc/redis/users.acl &&
    #        redis-server /usr/local/etc/redis/redis.conf --aclfile /usr/local/etc/redis/users.acl
## -3------------------------------------------------------------------------------------------
#  Приложение spring boot не подключилось, ошибка "NOPERM No permissions to access a channel":
#    mkdir -p /usr/local/etc/redis &&
    #        echo "bind 0.0.0.0" > /usr/local/etc/redis/redis.conf &&
    #        echo "requirepass $REDIS_PASSWORD" >> /usr/local/etc/redis/redis.conf &&
    #        echo "appendonly yes" >> /usr/local/etc/redis/redis.conf &&
    #        echo "appendfsync everysec" >> /usr/local/etc/redis/redis.conf &&
    #        echo "user default on >my_redis_password ~* +@all +@read +@write +cluster|nodes" > /usr/local/etc/redis/users.acl &&
    #        echo "user $REDIS_USER on >$REDIS_USER_PASSWORD ~* +@all +@read +@write +cluster|nodes" >> /usr/local/etc/redis/users.acl &&
    #        redis-server /usr/local/etc/redis/redis.conf --aclfile /usr/local/etc/redis/users.acl
## -4------------------------------------------------------------------------------------------
#    Так вообще не запустился контейнер:
#            mkdir -p /usr/local/etc/redis &&
    #        echo "bind 0.0.0.0" > /usr/local/etc/redis/redis.conf &&
    #        echo "appendonly yes" >> /usr/local/etc/redis/redis.conf &&
    #        echo "appendfsync everysec" >> /usr/local/etc/redis/redis.conf &&
    #        echo "logfile /var/log/redis/redis.log" >> /usr/local/etc/redis/redis.conf &&
    #        echo "user default off" > /usr/local/etc/redis/users.acl &&
    #        echo "user my_user on >my_user_password ~* +@all +@pubsub" >> /usr/local/etc/redis/users.acl &&
    #        redis-server /usr/local/etc/redis/redis.conf --aclfile /usr/local/etc/redis/users.acl &&
    #        echo "Redis started successfully" || echo "Redis failed to start"
## -5------------------------------------------------------------------------------------------
# Redis запущен без user.acl, на дефолтных настройках, потому что с настройкой других
# пользователей не получилось справиться, при запуске spring boot приложения работающего с Redis
# получал ошибку: NOPERM No permissions to access a channel
    command: >
      sh -c '
        mkdir -p /usr/local/etc/redis &&
        echo "bind 0.0.0.0" > /usr/local/etc/redis/redis.conf &&
        echo "requirepass $REDIS_PASSWORD" >> /usr/local/etc/redis/redis.conf &&
        echo "appendonly yes" >> /usr/local/etc/redis/redis.conf &&
        echo "appendfsync everysec" >> /usr/local/etc/redis/redis.conf &&
        redis-server /usr/local/etc/redis/redis.conf
      '
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "$REDIS_PASSWORD", "ping"]
#      test: ["CMD", "redis-cli", "-u", "redis://my_user:my_user_password@localhost:6379", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    #  Включены для интерактивного доступа:
    tty: true
    stdin_open: true
    networks:
      - redis-net

  redis-insight:
    image: docker.io/redis/redisinsight:latest
#    image: docker.io/redislabs/redisinsight:latest
    container_name: redis-insight
    restart: always
    ports:
#      - "8001:8001"
      - "5540:5540"
    volumes:
      - ./redisinsight_db:/data  # For RedisInsight's configuration and data
#      - redisinsight_db:/data
    depends_on:
      - redis # Ensures Redis starts before RedisInsight
    networks:
      - redis-net

volumes:
  redis_data:
  redisinsight_db:

networks:
  redis-net:
    name: redis-net
    driver: bridge

  
